1. bean + jpa
    1.1. 新建包，com.demo.bean，存放实体。
    1.2. 新建实体，Product.java，描述商品信息。
    1.3. 字段：id、name、price、count、desc、createDate、status
    1.4. 类型：int、String、double、int、String、Date、boolean
    1.5. @Entity、@Table、@Id、@GeratedValue、@Column
2. 配置jpa
    2.1. 在application.properties配置jpa的数据源
    2.2. 在主程序中扫描实体包，@EntityScan("com.demo.bean")
    2.3. 启动程序，生成表
3. Repository
    3.1. 创建包，com.demo.repository，存放仓储类。
    3.2. 新建接口，ProductRepository.java，提供商品相关的增删改查。
    3.3. 继承 JpaRepository<Product, Integer>
    3.4. 在主程序中，扫描仓储包，@EnableJpaRepository("com.demo.repository")
4. Controller
    4.1. 创建包，com.demo.controller，存放控制器。
    4.2. 新建类，HomeController.java，默认的控制器。
    4.3. 添加注解，@RestController
    4.4. 添加测试Action方法。
    4.5. 在主程序中，扫描控制器包，@ComponentScan("com.demo.controller")

    4.6. 新建类，ProductController.java，商品控制器
    4.7. 采用RestFul API设计
        GET     /product        获取所有
        GET     /product/{id}   按编号查询
        POST    /product        添加
        PUT     /product/{id}   修改
        DELETE  /product/{id}   删除
    4.8. 页面：
        GET     /product/page   显示所有商品页面
5. thymeleaf模板引擎
    5.1. 在配置文件 application.properties 中配置thymeleaf
    5.2. prefix、suffix、encoding。。。
    5.3. 创建页面，显示数据

6. NodeJS + Npm + Bower
    6.1. 安装NodeJS。
    6.2. 打开CMD，运行：node -v，查看NodeJS版本。
    6.3. 安装Bower：
        6.3.1. npm install -g bower
        6.3.2. bower -v
    6.4. 使用淘宝的cnpm替换nodejs自带的npm
        6.4.1. npm install -g cnpm --registry=https://registry.npm.taobao.org
    6.5. 测试：
        6.5.1. 打开CMD，进入D盘，新建文件夹Test：
            D:
            mkdir Test
            cd Test
        6.5.2. 使用bower安装jquery最新版本：
            bower install jquery
        6.5.3. 如果想要指定版本：
            bower install jquery@3.3.1
        6.5.4. 初始化项目，生成 bower.json
            bower init
        6.5.5. 创建bower配置文件：
            type > .bowerrc
        6.5.6. 指定存储目录：
            {
                "directory":"static/lib"
            }
        6.5.7. 保存依赖关系到 bower.json 中：
            bower install jquery --save